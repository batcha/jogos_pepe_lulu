// === SISTEMA DE MAPAS E PROGRESSÃO ===
class MapManager {
    static maps = [
        // Mapa 1 - Tutorial
        {
            id: 1,
            name: "Praia Tranquila",
            description: "Uma praia calma para começar a aventura",
            difficulty: "Fácil",
            timeLimit: 60, // segundos para bonus
            data: [
                '.....................',
                '.....................',
                '.....................',
                '.....................',
                '.....................',
                '.....................',
                '.....................',
                '.....................',
                '...P.......T........G',
                '#####################',
                '#####################'
            ]
        },
        
        // Mapa 2 - Médio
        {
            id: 2,
            name: "Baía Movimentada",
            description: "Mais turistas apareceram!",
            difficulty: "Médio",
            timeLimit: 90,
            data: [
                '.......................',
                '.......................',
                '............T...........',
                '..........####..........',
                '..C.....................',
                '######..................',
                '........................',
                '..........K.............',
                '...P....######..........',
                '########................',
                '................B.....G.',
                '#######################'
            ]
        },
        
        // Mapa 3 - Difícil
        {
            id: 3,
            name: "Resort Lotado",
            description: "A praia está cheia de turistas!",
            difficulty: "Difícil",
            timeLimit: 120,
            data: [
                '........................................',
                '..T.......K.......B.........C..........T',
                '.###.....###.....###......####......###',
                '........................................',
                '...C...........C...........C............',
                '######.....################.....########',
                '........................................',
                '........T...K.......B..........T.......K',
                '...P..#######...#########....######....#',
                '######........................##........',
                '..................................G.....',
                '########################################'
            ]
        },
        
        // Mapa 4 - Torre Vertical
        {
            id: 4,
            name: "Torre da Praia",
            description: "Suba até o topo da torre!",
            difficulty: "Desafiador",
            timeLimit: 150,
            data: [
                '..........G.........',
                '......#########.....',
                '......#.......#.....',
                '......#...T...#.....',
                '......#.......#.....',
                '......###...###.....',
                '..........C.........',
                '......###...###.....',
                '......#.......#.....',
                '......#...K...#.....',
                '......#.......#.....',
                '......###...###.....',
                '..........C.........',
                '......###...###.....',
                '......#.......#.....',
                '......#...B...#.....',
                '......#.......#.....',
                '......#########.....',
                '..........P.........',
                '####################'
            ]
        },
        
        // Mapa 5 - Final Boss
        {
            id: 5,
            name: "Praia do Caos",
            description: "Todos os tipos de turistas juntos!",
            difficulty: "Extremo",
            timeLimit: 180,
            data: [
                '####################################',
                '#..T.....#.........C...#..........G#',
                '#.####...#.####.#####..#.#######.#.#',
                '#......#.#....#.....#..#.......#.#.#',
                '###.##.#.####.#####.#..#######.#.#.#',
                '#...#....#..........#..........#...#',
                '#.#.######.#########.##########.###.#',
                '#.#........#.......K.#........#.....#',
                '#.##########.#######.#.######.#####.#',
                '#..........#...C.....#......#.......#',
                '#.#######.###.#####.########.#######.#',
                '#.......#...#.....#........#.......#.#',
                '#######.###.#####.#########.#######.#.#',
                '#.......#.........#.......#.........#.#',
                '#.#####.#.#######.#######.#.#######.#.#',
                '#.....#...#.....#.......#...#.......#.#',
                '#####.###.#.###.#######.###.#.#####.#.#',
                '#.....#.#.#.#.#.......#.#.#.#.#...#...#',
                '#.###.#.#.#.#.#######.#.#.#.#.#.#.###.#',
                '#P..B...#...#.........#...#...#.......#',
                '####################################'
            ]
        }
    ];
    
    static getCurrentMap(mapId) {
        return this.maps.find(map => map.id === mapId) || this.maps[0];
    }
    
    static getNextMapId(currentMapId) {
        const currentIndex = this.maps.findIndex(map => map.id === currentMapId);
        if (currentIndex >= 0 && currentIndex < this.maps.length - 1) {
            return this.maps[currentIndex + 1].id;
        }
        return null; // Não há próximo mapa (fim do jogo)
    }
    
    static getTotalMaps() {
        return this.maps.length;
    }
    
    static isLastMap(mapId) {
        return mapId === this.maps[this.maps.length - 1].id;
    }
}
